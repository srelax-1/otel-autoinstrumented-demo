services:
  student:
    build: ./student_app
    container_name: student
    ports:
      - "5000:5000"
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
      OTEL_METRICS_EXPORTER: "otlp"
      OTEL_TRACES_EXPORTER: "otlp"
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_SERVICE_NAME: "student"
      OTEL_LOG_LEVEL: "debug"
      OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=dev,service.namespace=school-api"
      OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED: "true"
      OTEL_METRIC_EXPORT_INTERVAL: 1000

    depends_on:
      - otel-collector
    networks:
      - otel-network

  # OpenTelemetry Collector
  otel-collector:
    image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
      - "9464:9464"  # Prometheus exporter
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    networks:
      - otel-network

  # Prometheus
  prometheus:
    # image: quay.io/prometheus/prometheus:v2.52.0
    image: prom/prometheus:main
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus-config.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    command: 
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=5h
      - --web.enable-lifecycle
      - --enable-feature=otlp-write-receiver
      - --web.route-prefix=/
    restart: unless-stopped
    depends_on:
      - otel-collector
    networks:
      - otel-network

  # Tempo
  tempo:
    image: grafana/tempo:main-39a47ff
    container_name: tempo
    volumes:
      - ./config/tempo-config.yaml:/etc/tempo-config.yaml 
    command: ["--config.file=/etc/tempo-config.yaml"]
    ports:
      - "3200:3200"  # Query API (Grafana)
      - "3201:3201"
      - "14318:4318"  # OTLP ingestion
      - "14317:4317"  # OTLP gRPC
    restart: unless-stopped
    networks:
      - otel-network


  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    volumes:
      - loki_data:/loki
      - loki-wal:/wal
      - ./config/loki-config.yaml:/etc/loki/loki-config.yaml
    command: ["-config.file=/etc/loki/loki-config.yaml"]
    user: root
    ports:
      - "3100:3100"
    depends_on:
      - otel-collector
    networks:
      - otel-network

  # Grafana
  grafana:
    # image: grafana/grafana:11.5.2
    image: grafana/grafana-oss:main-ubuntu
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    depends_on:
      - otel-collector
    networks:
      - otel-network

volumes:
  prometheus_data:
  loki_data:
  loki-wal:

networks:
  otel-network:
    driver: bridge